# This workflow is used to run benchmarktests based on the unittest framework

name: Benchmark tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  benchmark:

    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        include:
        - operating-system: macos-latest
          python-version: '3.10'
          label: osx-64-py-3-10
          prefix: /Users/runner/miniconda3/envs/my-env

        - operating-system: windows-latest
          python-version: '3.10'
          label: win-64-py-3-10
          prefix: C:\Miniconda3\envs\my-env
          
        - operating-system: ubuntu-latest
          python-version: '3.10'
          label: linux-64-py-3-10
          prefix: /usr/share/miniconda3/envs/my-env

    steps:
    - uses: actions/checkout@v2
    - name: Setup environment
      run: cp .ci_support/environment.yml environment.yml
    - name: Setup Mambaforge
      uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
        miniforge-variant: Mambaforge
        channels: conda-forge
        channel-priority: strict
        activate-environment: my-env
        use-mamba: true
    - name: Set cache date and number
      run: |
        echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV
        cat .github/variables/cache_number.env >> $GITHUB_ENV
    - uses: actions/cache@v2
      with:
        path: ${{ matrix.prefix }}
        key: ${{ matrix.label }}-conda-${{ hashFiles('environment.yml') }}-${{ env.DATE }}-${{ env.CACHE_NUMBER }}
      id: cache
    - name: Update environment
      run: mamba env update -n my-env -f environment.yml
      if: steps.cache.outputs.cache-hit != 'true'  
    - name: Setup
      shell: bash -l {0}
      run: |
        python .ci_support/pyironconfig.py
        pip install --no-deps .
    - name: Tests
      shell: bash -l {0}
      timeout-minutes: 30
      run: python -m unittest discover test_benchmarks
